{
	"id": "74fcafbe-7457-4d89-ae89-e36bb4641dd6",
	"createdAt": "2022-07-13T14:10:56.763Z",
	"createdBy": "VSawan10",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [],
	"apis": [],
	"name": "HRIA_RULE_ENGINE_CURRENCY_CONVERSION",
	"ver": "22.7.13.1116",
	"description": "Rule Engine script to convert the target salary in local currency into its USD EQ.",
	"content": [
		"==OBJECT STRING==",
		"async function currency_conversion_USD() {\r",
		"\r",
		"    try {\r",
		"\r",
		"        let startTime = Date.now();\r",
		"\r",
		"        //input parameters for the Rule engine process\r",
		"        let country = req.body && req.body.country ? req.body.country : '';\r",
		"        let tgtSalOffer = req.body && req.body.tgtSalOffer ? req.body.tgtSalOffer : '';\r",
		"\r",
		"\r",
		"        /*\r",
		"        what if the country parameter is absent\r",
		"        */\r",
		"        let errstatus = false;\r",
		"        let errMsg = [];\r",
		"\r",
		"        if (country === undefined || country === '') {\r",
		"            errstatus = true;\r",
		"            errMsg.push('\\n Country');\r",
		"        }\r",
		"\r",
		"        if (tgtSalOffer === undefined || tgtSalOffer === '') {\r",
		"            errstatus = true;\r",
		"            errMsg.push('\\n Target Salary Offer');\r",
		"        }\r",
		"\r",
		"\r",
		"        if (errstatus && errMsg.length > 0) {\r",
		"\r",
		"            /*\r",
		"            terminating the script with 200 & sending appropriate error message to the UI\r",
		"            */\r",
		"            result = {\r",
		"                statusFlag: 'F',\r",
		"                message: 'The following mandatory parameters are required: \\n' + errMsg.toString()\r",
		"            }\r",
		"            //console.log(result);\r",
		"            complete();\r",
		"            return;\r",
		"\r",
		"        }\r",
		"\r",
		"\r",
		"        /*\r",
		"        if the target salary offer is not a number\r",
		"        */\r",
		"        if (isNaN(tgtSalOffer)) {\r",
		"\r",
		"            result = {\r",
		"                statusFlag: 'F',\r",
		"                message: 'Invalid Target Salary Offer received'\r",
		"            }\r",
		"\r",
		"            complete();\r",
		"            return;\r",
		"\r",
		"        }\r",
		"\r",
		"\r",
		"\r",
		"\r",
		"\r",
		"\r",
		"        /*\r",
		"        parameter is present\r",
		"        STEP 1: RULE ENGINE OPERATION\r",
		"        */\r",
		"        let conversionRes = await p9.rulesengine.execute({ country: country }, \"c677b83c-2317-472c-b180-77b7b9737da8\");\r",
		"\r",
		"\r",
		"        if (conversionRes) {\r",
		"            /*\r",
		"            parsing the string to JSON object\r",
		"            */\r",
		"            conversionRes = JSON.parse(conversionRes);\r",
		"            log.info('[HRIA_RULE_ENGINE_CURRENCY_CONVERSION] script executed with conversion Rate of ' + conversionRes + ' against local currency of ' + country);\r",
		"            //console.log(conversionRes)\r",
		"\r",
		"        } else {\r",
		"            /*\r",
		"            if the output of Rule engine is invalid\r",
		"            */\r",
		"            result = {\r",
		"                statusFlag: 'F',\r",
		"                message: 'Invalid Currency Conversion Rate received. \\n Please check the Rule or input country'\r",
		"            }\r",
		"            complete();\r",
		"            return;\r",
		"        }\r",
		"\r",
		"\r",
		"        /*\r",
		"        STEP 2: CONVERTING THE TARGET SALARY OFFER IN LOCAL CURRENCY TO USD EQ.\r",
		"        FORMULA: multplying the local currency by forex Rate.\r",
		"        */\r",
		"        let usd_equivalent_offer = 0;\r",
		"        usd_equivalent_offer = tgtSalOffer * conversionRes.conversionRate;\r",
		"\r",
		"        //console.log(usd_equivalent_offer);\r",
		"\r",
		"        if (!isNaN(usd_equivalent_offer)) {\r",
		"\r",
		"            /*\r",
		"            VALID USD EQUIVALENT\r",
		"            */\r",
		"\r",
		"            result = {\r",
		"\r",
		"                statusFlag: 'S',\r",
		"                usd_equivalent: usd_equivalent_offer,\r",
		"                queryMsg: 'operation completed in ' + ((Date.now() - startTime) / 1000) + ' seconds'\r",
		"\r",
		"            }\r",
		"\r",
		"            log.info('[HRIA_RULE_ENGINE_CURRENCY_CONVERSION] script executed with USD EQ of ' + usd_equivalent_offer + ' against local currency of ' + country);\r",
		"\r",
		"        } else {\r",
		"\r",
		"            /*\r",
		"            INVALID USD EQUIVALENT\r",
		"            */\r",
		"            result = {\r",
		"\r",
		"                statusFlag: 'F',\r",
		"                message: 'Invalid USD equivalent received. \\n Please check the Target Salary offer, country or Rule'\r",
		"\r",
		"            }\r",
		"            log.error('[HRIA_RULE_ENGINE_CURRENCY_CONVERSION] script execution failed due to invalid USD EQ calculated');\r",
		"        }\r",
		"\r",
		"        console.log(result)\r",
		"\r",
		"        complete();\r",
		"\r",
		"\r",
		"    } catch (err) {\r",
		"\r",
		"        result = {\r",
		"            statusFlag: 'F',\r",
		"            message: 'script execution failed due to -- ' + err\r",
		"        }\r",
		"\r",
		"        log.error('[HRIA_RULE_ENGINE_CURRENCY_CONVERSION] script execution failed due to -- ' + err);\r",
		"        complete();\r",
		"\r",
		"    }\r",
		"\r",
		"}\r",
		"\r",
		"await currency_conversion_USD();"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": true,
	"jsscriptGroup": "7584c1f8-716a-4e65-a26f-b5719d3ec8b8",
	"package": "b1c5d619-3e13-4bbb-875e-88eb3d2c34f7"
}