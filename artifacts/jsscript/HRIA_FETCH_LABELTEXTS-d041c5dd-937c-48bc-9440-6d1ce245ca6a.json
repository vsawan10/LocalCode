{
	"id": "d041c5dd-937c-48bc-9440-6d1ce245ca6a",
	"createdAt": "2022-07-07T23:17:18.763Z",
	"createdBy": "VSawan10",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "5fd80f9a-3ec0-4f6f-8975-04c123b409e9",
			"name": "hria_labels_config",
			"contextname": "hria_labels_config"
		}
	],
	"apis": [],
	"name": "HRIA_FETCH_LABELTEXTS",
	"ver": "22.7.7.202",
	"description": "script to fetch the label texts",
	"content": [
		"==OBJECT STRING==",
		"async function fetch_labelTexts() {\r",
		"\r",
		"    try {\r",
		"\r",
		"        let startTime = Date.now();\r",
		"        let appName = req.body.appName ? req.body.appName : '';\r",
		"\r",
		"        if (appName === '') {\r",
		"            fail();\r",
		"        }\r",
		"\r",
		"        //paramters\r",
		"        const queryWhere = 'UPPER(label.applicationName) = UPPER(:appName)';\r",
		"        const queryValues = {\r",
		"            appName: appName.toUpperCase().trim()\r",
		"        }\r",
		"\r",
		"        //selecting columns from database table\r",
		"        let selectDB = [\r",
		"            'label.applicationName AS appname',\r",
		"            'label.module AS module',\r",
		"            'label.technicalName AS techname',\r",
		"            'label.labelName AS labeltext',\r",
		"            'label.type AS type'\r",
		"        ]\r",
		"\r",
		"        //actual query\r",
		"        let labels = [];\r",
		"\r",
		"        labels = await entities.hria_labels_config\r",
		"            .createQueryBuilder('label')\r",
		"            .select(selectDB)\r",
		"            .where(queryWhere, queryValues)\r",
		"            .getRawMany();\r",
		"\r",
		"\r",
		"        //log.info('script [HRIA_FETCH_LABELTEXTS] fetched labels of count -- ' + labels.length);\r",
		"        log.info('script [HRIA_FETCH_LABELTEXTS] pushed formatted labels to UI having count -- ' + labels.length);\r",
		"\r",
		"\r",
		"        result = {\r",
		"            labelResponse: labels,\r",
		"            queryMsg: \"API call Executed successfully in \" + (Date.now() - startTime) / 1000 + \" seconds\",\r",
		"        }\r",
		"\r",
		"        console.log(result);\r",
		"\r",
		"        complete();\r",
		"\r",
		"\r",
		"    } catch (err) {\r",
		"\r",
		"        log.error('Error in executing script [HRIA_FETCH_LABELTEXTS] while performing -- ' + err);\r",
		"        fail();\r",
		"\r",
		"    }\r",
		"\r",
		"}\r",
		"\r",
		"\r",
		"await fetch_labelTexts();"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": true,
	"jsscriptGroup": "7584c1f8-716a-4e65-a26f-b5719d3ec8b8",
	"package": "b1c5d619-3e13-4bbb-875e-88eb3d2c34f7"
}