{
	"id": "df3d5e1d-7893-45ea-ac17-9d4e6011fe03",
	"createdAt": "2022-07-14T21:45:38.457Z",
	"createdBy": "VSawan10",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "c3d6249b-c101-4efa-a67f-68dea3072dfc",
			"name": "hria_rules_config",
			"contextname": "hria_rules_config"
		}
	],
	"apis": [],
	"name": "HRIA_FETCH_RULEID",
	"ver": "22.7.15.1546",
	"description": "global script to fetch the rule ID to execute the rules in script",
	"content": [
		"==OBJECT STRING==",
		"async function fetchRuleID(ruleTechName) {\r",
		"\r",
		"    try {\r",
		"\r",
		"        let startTime = Date.now();\r",
		"\r",
		"        //input parameters\r",
		"        //let ruleTechName = req.query && req.query.ruleTechName ? req.query.ruleTechName : '';\r",
		"\r",
		"        if (ruleTechName === undefined || ruleTechName === '') {\r",
		"\r",
		"            return {\r",
		"                statusFlag: 'F',\r",
		"                message: 'missing parameters'\r",
		"            }\r",
		"        }\r",
		"\r",
		"\r",
		"        //find operation\r",
		"        const ruleObj = await entities.hria_rules_config.findOne({ \"ruleTechName\": ruleTechName });\r",
		"\r",
		"        if (ruleObj && ruleObj.ruleID && ruleObj.ruleID !== '') {\r",
		"\r",
		"            log.info('[HRIA_FETCH_RULEID] script executed by fetching rule ID -- ' + ruleObj.ruleID);\r",
		"\r",
		"            return {\r",
		"                statusFlag: 'S',\r",
		"                ruleID: ruleObj.ruleID, //actual rule ID\r",
		"                queryMsg: 'operation completed in ' + ((Date.now() - startTime) / 1000) + ' seconds'\r",
		"            }\r",
		"\r",
		"            /*\r",
		"            result = {\r",
		"                statusFlag: 'S',\r",
		"                ruleID: ruleObj.ruleID, //actual rule ID\r",
		"                queryMsg: 'operation completed in ' + ((Date.now() - startTime) / 1000) + ' seconds'\r",
		"            }\r",
		"            */\r",
		"\r",
		"\r",
		"        } else {\r",
		"\r",
		"            /*\r",
		"            result = {\r",
		"                statusFlag: 'F',\r",
		"                message: 'undefined Rule received.'\r",
		"            }\r",
		"            */\r",
		"            log.info('[HRIA_FETCH_RULEID] Error in receiving the RULE ID due to -- ' + g_res.message);\r",
		"\r",
		"            return {\r",
		"                statusFlag: 'F',\r",
		"                message: 'undefined Rule received.'\r",
		"            }\r",
		"\r",
		"        }\r",
		"\r",
		"        //complete();\r",
		"\r",
		"    } catch {\r",
		"        log.error('[HRIA_FETCH_RULEID] script execution failed due to --' + err);\r",
		"        return {\r",
		"            statusFlag: 'F',\r",
		"            message: err\r",
		"        }\r",
		"\r",
		"    }\r",
		"\r",
		"}\r",
		"\r",
		"\r",
		"complete({\r",
		"    fetchRuleID\r",
		"})\r",
		"//await fetchRuleID(ruleTechName);"
	],
	"useAsGlobalScript": true,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": true,
	"jsscriptGroup": "7584c1f8-716a-4e65-a26f-b5719d3ec8b8",
	"package": "b1c5d619-3e13-4bbb-875e-88eb3d2c34f7"
}