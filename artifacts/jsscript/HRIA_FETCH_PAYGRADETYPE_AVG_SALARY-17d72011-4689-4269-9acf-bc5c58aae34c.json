{
	"id": "17d72011-4689-4269-9acf-bc5c58aae34c",
	"createdAt": "2022-07-11T16:05:48.215Z",
	"createdBy": "VSawan10",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "9c74b95b-8c97-4f4e-be7b-8af4581e5873",
			"name": "hria_salary_comparables",
			"contextname": "hria_salary_comparables"
		}
	],
	"apis": [],
	"name": "HRIA_FETCH_PAYGRADETYPE_AVG_SALARY",
	"ver": "22.7.18.1138",
	"description": "script to fetch pay grade type and its average salary.",
	"content": [
		"==OBJECT STRING==",
		"async function fetch_payGradeType_avgSalary() {\r",
		"\r",
		"    try {\r",
		"\r",
		"        //req.body = { \"country\": \"Canada\", \"functionCode\": \"Finance\", \"pgArea\": \"Toronto\" };\r",
		"\r",
		"        let startTime = Date.now();\r",
		"\r",
		"        //input parameters\r",
		"        let country = req.body.country ? req.body.country : '';\r",
		"        let functionCode = req.body.functionCode ? req.body.functionCode : ''\r",
		"        let pgArea = req.body.pgArea ? req.body.pgArea : '';\r",
		"\r",
		"\r",
		"\r",
		"        if (country === '' || functionCode === '' || pgArea === '') {\r",
		"\r",
		"            result = {\r",
		"                statusFlag: 'F',\r",
		"                queryMsg: 'operation completed in ' + ((Date.now() - startTime) / 1000) + ' seconds',\r",
		"                message: 'Please have all the mandatory parameters'\r",
		"            }\r",
		"            console.log(result);\r",
		"            complete();\r",
		"            return;\r",
		"\r",
		"        }\r",
		"\r",
		"\r",
		"        //query parameters\r",
		"        let queryWhere = 'UPPER(sal.country) = UPPER(:country) AND UPPER(sal.functionCode) = UPPER(:functionCode)';\r",
		"        let queryValues = {\r",
		"            country: country.toUpperCase().trim(),\r",
		"            functionCode: functionCode.toUpperCase().trim()\r",
		"        }\r",
		"\r",
		"        let selectDB = [\r",
		"            'sal.avgSalary AS averagesalary',\r",
		"            'sal.countryCode AS countrycode'\r",
		"        ];\r",
		"\r",
		"        //actual query\r",
		"        let resData = [];\r",
		"        resData = await entities.hria_salary_comparables\r",
		"            .createQueryBuilder('sal')\r",
		"            .select(selectDB)\r",
		"            .where(queryWhere, queryValues)\r",
		"            .getRawMany();\r",
		"\r",
		"\r",
		"        switch (resData.length) {\r",
		"\r",
		"            case 0:\r",
		"                log.info('[HRIA_FETCH_PAYGRADETYPE_AVG_SALARY] script executed with no response -- ' + resData.length);\r",
		"                result = {\r",
		"                    dataLen: resData.length,\r",
		"                    dataObj: resData,\r",
		"                    message: 'No Response received for the country: ' + country + ' with function as ' + functionCode + '.',\r",
		"                    statusFlag: 'S'\r",
		"                }\r",
		"                break;\r",
		"\r",
		"\r",
		"            case 1:\r",
		"                log.info('[HRIA_FETCH_PAYGRADETYPE_AVG_SALARY] script executed with the following data -- ' + resData);\r",
		"\r",
		"                result = {\r",
		"                    statusFlag: 'S',\r",
		"                    queryMsg: 'executed in ' + ((Date.now() - startTime) / 1000) + ' seconds',\r",
		"                    dataLen: resData.length,\r",
		"                    dataObj: {\r",
		"                        avgSalary: resData[resData.length - 1].averagesalary ? resData[resData.length - 1].averagesalary : undefined,\r",
		"                        countryCode: resData[resData.length - 1].countrycode ? resData[resData.length - 1].countrycode.toUpperCase().trim() : undefined,\r",
		"                        pgArea: pgArea\r",
		"                    }\r",
		"                }\r",
		"                break;\r",
		"\r",
		"\r",
		"            default:\r",
		"                log.info('[HRIA_FETCH_PAYGRADETYPE_AVG_SALARY] script executed with more than sufficient response -- ' + resData.length);\r",
		"                result = {\r",
		"                    statusFlag: 'F',\r",
		"                    dataLen: resData.length,\r",
		"                    dataObj: resData,\r",
		"                    message: 'Multiple Responses received for the country: ' + country + ' with function as ' + functionCode + '.'\r",
		"                }\r",
		"                break;\r",
		"\r",
		"        }\r",
		"\r",
		"        //console.log(result);\r",
		"\r",
		"        complete();\r",
		"\r",
		"\r",
		"    } catch (err) {\r",
		"\r",
		"        log.error('[HRIA_FETCH_PAYGRADETYPE_AVG_SALARY] script execution failed due to -- ' + err);\r",
		"        fail();\r",
		"\r",
		"    }\r",
		"\r",
		"}\r",
		"\r",
		"await fetch_payGradeType_avgSalary();"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": true,
	"jsscriptGroup": "7584c1f8-716a-4e65-a26f-b5719d3ec8b8",
	"package": "b1c5d619-3e13-4bbb-875e-88eb3d2c34f7"
}